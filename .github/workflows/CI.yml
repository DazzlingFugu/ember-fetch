name: CI

on:
  pull_request:
  push:
    # filtering branches here prevents duplicate builds from pull_request and push
    branches:
      - master
      - "v*"
    # always run CI for tags
    tags:
      - "*"

jobs:
  lint:
    name: "Linting"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: yarn install --frozen-lockfile --non-interactive
      - run: yarn lint:js

  ember-tests:
    needs: lint
    name: "Tests: ubuntu (node@${{ matrix.node-version }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18"]

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile --non-interactive
      - run: yarn test

  prefer-native-tests:
    needs: ember-tests
    name: "PREFER_NATIVE=true Tests: ubuntu (node@${{ matrix.node-version }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18"]

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile --non-interactive
      - run: PREFER_NATIVE=true yarn test

  native-promise-tests:
    needs: ember-tests
    name: "NATIVE_PROMISE=true Tests: ubuntu (node@${{ matrix.node-version }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18"]

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile --non-interactive
      - run: NATIVE_PROMISE=true yarn test

  node-tests:
    needs: ember-tests
    name: "Node Tests: ubuntu (node@${{ matrix.node-version }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["18"]

    steps:
      - uses: actions/checkout@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile --non-interactive
      - run: yarn run test:node

  try-scenarios:
    name: Tests - ${{ matrix.ember-try-scenario }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.allow-failure }}
    needs: ember-tests

    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-default
          - ember-lts-3.28
          - ember-lts-4.4
          - ember-lts-4.8
          - ember-release
          - ember-beta
          - ember-canary
          - embroider-safe
          - embroider-optimized

    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: install dependencies
        run: yarn install
      - name: test
        run: node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }} --skip-cleanup
